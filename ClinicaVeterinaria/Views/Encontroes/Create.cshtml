@model ClinicaVeterinaria.Models.Encontro
@using ClinicaVeterinaria.Models

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Encontro</h4>
    <hr />
    @Html.ValidationSummary(true)

    <div class="form-group">
        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nome)
            @Html.ValidationMessageFor(model => model.Nome)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HoraInicio, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="input-group">
                @Html.EditorFor(model => model.HoraInicio, new { htmlAttributes = new { @class = "form-control datepicker", type = "datetime-local" } })
                @Html.ValidationMessageFor(model => model.HoraInicio, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HoraTermino, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="input-group">
                @Html.EditorFor(model => model.HoraTermino, new { htmlAttributes = new { @class = "form-control datepicker", type = "datetime-local" } })
                @Html.ValidationMessageFor(model => model.HoraTermino, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TipoConsulta, "Tipo de Consulta", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("TipoConsulta", (IEnumerable<SelectListItem>)ViewBag.TipoConsulta, "", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TipoConsulta, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ValorPagoConsulta, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ValorPagoConsulta)
            @Html.ValidationMessageFor(model => model.ValorPagoConsulta)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PetId, "PetId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("PetId", String.Empty)
            @Html.ValidationMessageFor(model => model.PetId)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.VeterinarioId, "VeterinarioId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("VeterinarioId", String.Empty)
            @Html.ValidationMessageFor(model => model.VeterinarioId)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Descricao, new { @class = "form-control", rows = 5 })
            @Html.ValidationMessageFor(model => model.Descricao)
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            // Formata a data atual para o formato aceito pelo input datetime-local
            var now = new Date();
            var day = ("0" + now.getDate()).slice(-2);
            var month = ("0" + (now.getMonth() + 1)).slice(-2);
            var hours = ("0" + now.getHours()).slice(-2);
            var minutes = ("0" + now.getMinutes()).slice(-2);

            var today = now.getFullYear() + "-" + month + "-" + day + "T" + hours + ":" + minutes;

            // Se for uma nova consulta, define o valor padrão como agora
            if (!$('input[type="datetime-local"]').val()) {
                $('input[type="datetime-local"]').val(today);
            }
        });
    </script>
}
